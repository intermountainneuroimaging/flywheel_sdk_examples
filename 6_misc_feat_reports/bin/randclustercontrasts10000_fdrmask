#!/bin/bash
#
# randclustercontrasts10000_fdrmask
#
# 01-27-2015 KLP updated from randclustercontrasts3
#                base oneminus,prob_thesh fdr output file names on contrast + tstat number
#                expect input from gfeat/randomise_results3
#                save output to gfeat/fdr_summary_stats
#                get tstat from gfeat/randomise_results3
#                -- not gfeat/cope*.feat/stats/tstat*
#
# 11-01-2016 KLP updated from randclustercontrasts_fdr to add optional mask
#
#                for new 2nd argument, if no mask set or == "default", then:
#                    cope*.feat/mask.nii.gz is used in the fdr calculation
#                otherwise:
#                    the 2nd argument supplied *.nii.gz
#                    (such as a GM mask input to randomise) is used
#
#                save output to gfeat/fdrmask_summary_stats
#
# 09-19-2018 KLP updated for 10000 permuations instead of the default 5000
#
gfeat=${1:-$PWD/../../cold/higher_cold_robust0_16subj.gfeat}
mask=${2:-default}
z=${3:-1}
connectivity=${4:-26}
here=$PWD
#
# FSL cluster option --connectivity; Luka's clusters option -c
# 26 = vertices (default)
# 18 = edges
#  6 = faces
conopt=""
consuffix=""
if [ "$connectivity" == "18" ] ; then
    conopt="-c 18"
    consuffix=_edges
elif [ "$connectivity" == "6" ] ; then
    conopt="-c 6"
    consuffix=_faces
fi
#
cd $gfeat
if [ "$z" == "1" ]; then
    gsum=fdrmask_summary_stats$consuffix
else
    gsum=fdrmask_summary_view_z${z}$consuffix
fi
mkdir -p $gsum/thresh_tstats
mkdir -p $gsum/clusters
mkdir -p $gsum/clusters_icbm
mkdir -p $gsum/clusters_icbm_atlasq
for c in cope*.feat; do
    contrast=`cat report_stats.html | grep $c | cut -d '(' -f2 | cut -d ')' -f1 | sed -e 's|[() ]|_|g' -e 's|>|-|g' -e 's|<|-lt-|g' -e 's|&|+|g' `
    statname=( `grep ContrastName design.con | cut -f2 | tr -d ' '` )
    statno=`grep ContrastName design.con | cut -f1 | cut -c14-`
    for i in $statno; do
        let j="$i-1"
        cname=${contrast}_${statname[$j]}
        echo $i:$cname
# thresholded tstat

# compute fdr from randomise result
        uncorrp=randomise_results3/random_${contrast}_10000_vox_p_tstat${i}.nii.gz
        fdrthresh=$gsum/thresh_tstats/thresh_fdr_oneminusp_tstat${i}_${cname}.nii.gz
        if [ $mask == "default" ]; then
            fdr -i $uncorrp --oneminusp -m $c/mask.nii.gz -q 0.05 --othresh=$fdrthresh > $gsum/thresh_tstats/prob_thresh_tstat${i}_${cname}.txt 2>&1
        else
            fdr -i $uncorrp --oneminusp -m $mask -q 0.05 --othresh=$fdrthresh > $gsum/thresh_tstats/prob_thresh_tstat${i}_${cname}.txt 2>&1
        fi
#       tstat=$c/stats/tstat${i}
        tstat=randomise_results3/random_${contrast}_10000_tstat${i}
        threshtstat=$gsum/thresh_tstats/thresh_fdr_tstat${i}_${cname}
        fslmaths $fdrthresh -thr 0.95 -bin -mul $tstat $threshtstat
# tstat clusters
        ctstat1=$gsum/clusters/cluster_report_${cname}_z${z}_v10.csv
        ctstat2=$gsum/clusters_icbm/cluster_report_${cname}_z${z}_v10.csv
        ctstat3=$gsum/clusters_icbm_atlasq/cluster_report_${cname}_z${z}_v10.csv
        no_ctstat1=$gsum/clusters/cluster_report_${cname}_z${z}_v10_empty.csv
        no_ctstat2=$gsum/clusters_icbm/cluster_report_${cname}_z${z}_v10_empty.csv
        no_ctstat3=$gsum/clusters_icbm_atlasq/cluster_report_${cname}_z${z}_v10_empty.csv
        clusters $threshtstat $conopt -z $z -v 10 -o $ctstat1 --no_clusters_file $no_ctstat1
        clusters $threshtstat $conopt -z $z -v 10 -o $ctstat2 -icbm --no_clusters_file $no_ctstat2
        clusters $threshtstat $conopt -z $z -v 10 -o $ctstat3 -icbm -a --no_clusters_file $no_ctstat3
    done
done
cd $here
