#!/bin/bash
#
# KLP 04-30-2010
# modified Banich Lab function tal2mni for Jack Lancaster's transforms
#

usage() {
    echo
    echo "*   usage: `basename $0` xtal ytal ztal [fsl_spm_other] [ndecimals]"
    echo "*          `basename $0` xtal ytal ztal fsl 4"
    echo "*          `basename $0` xtal ytal ztal spm 4"
    echo "*          `basename $0` xtal ytal ztal other 4"
    echo
    echo "*          if not specified, fsl_spm_other defaults to fsl"
    echo "*          if not specified, ndecimals defaults to 1"
    echo
    exit 7
}

if [ $# -lt 3 ];then
    usage
fi

# take arguments into variables
xtal=$1
ytal=$2
ztal=$3
conv=fsl
scale=1
if [ $# -ge 4 ]; then
    conv=$4
fi
if [ $# -ge 5 ]; then
    scale=$5
fi

# FROM matlab function tal2icmb_fsl.m
#
# function outpoints = tal2icbm_fsl(inpoints)
# %
# % This function converts coordinates from Talairach space to MNI
# % space (normalized using the FSL software package) using the
# % tal2icbm transform developed and validated by Jack Lancaster
# % at the Research Imaging Center in San Antonio, Texas.
# %
# % http://www3.interscience.wiley.com/cgi-bin/abstract/114104479/ABSTRACT
#
# icbm_fsl = [0.9464 0.0034 -0.0026 -1.0680
#            -0.0083 0.9479 -0.0580 -1.0239
#             0.0053 0.0617  0.9010  3.1883
#             0.0000 0.0000  0.0000  1.0000];
#
# format long
# % invert the transformation matrix
# icbm_fsl = inv(icbm_fsl)
#    1.056585197296569  -0.003971659894079   0.002793302152180   1.115460522895391
#    0.008834356736559   1.050528422733950   0.067651074190992   0.869379225188796
#   -0.006820179085813  -0.071916264023581   1.105228772720321  -3.604719910061591
#                    0                   0                   0   1.000000000000000
#------------------------------------------------------------------------------------
#
# FROM matlab function tal2icbm_spm.m
#
# function outpoints = tal2icbm_spm(inpoints)
# %
# % This function converts coordinates from Talairach space to MNI
# % space (normalized using the SPM software package) using the
# % tal2icbm transform developed and validated by Jack Lancaster
# % at the Research Imaging Center in San Antonio, Texas.
# %
# % http://www3.interscience.wiley.com/cgi-bin/abstract/114104479/ABSTRACT
#
# icbm_spm = [0.9254 0.0024 -0.0118 -1.0207
#            -0.0048 0.9316 -0.0871 -1.7667
#             0.0152 0.0883  0.8924  4.0926
#             0.0000 0.0000  0.0000  1.0000];
#
# format long
# % invert the transformation matrix
# icbm_spm = inv(icbm_spm)
#    1.080364454822239  -0.004099342301798   0.013885306871824   1.038658684088845
#    0.003810790425104   1.063568379284752   0.103856760603673   1.457851751022681
#   -0.018778611057636  -0.105166716593295   1.110060949545320  -4.748000808621081
#                    0                   0                   0   1.000000000000000
#
#------------------------------------------------------------------------------------
#
# FROM matlab function tal2icm_other.m
#
# function outpoints = tal2icbm_other(inpoints)
# %
# % This function converts coordinates from Talairach space to MNI
# % space (normalized using templates other than those contained
# % in SPM and FSL) using the tal2icbm transform developed and
# % validated by Jack Lancaster at the Research Imaging Center in
# % San Antonio, Texas.
# %
# % http://www3.interscience.wiley.com/cgi-bin/abstract/114104479/ABSTRACT
#
# icbm_other = [0.9357 0.0029 -0.0072 -1.0423
#              -0.0065 0.9396 -0.0726 -1.3940
#               0.0103 0.0752  0.8967  3.6475
#               0.0000 0.0000  0.0000  1.0000];
#
# format long
# % invert the transformation matrix
# icbm_other = inv(icbm_other)
#    1.068600181822688  -0.003959206893801   0.008259711038958   1.078155539089231
#    0.006402499024408   1.057406970250561   0.085662812571837   1.168243532406646
#   -0.012811475186137  -0.088631899555967   1.107921357723761  -4.178049420864948
#                    0                   0                   0   1.000000000000000
# 
#------------------------------------------------------------------------------------
#

if [ "$conv" == "fsl" ]; then 
    r1=(  1.056585197296569  -0.003971659894079   0.002793302152180   1.115460522895391 )
    r2=(  0.008834356736559   1.050528422733950   0.067651074190992   0.869379225188796 )
    r3=( -0.006820179085813  -0.071916264023581   1.105228772720321  -3.604719910061591 )
elif [ "$conv" == "spm" ]; then
    r1=(  1.080364454822239  -0.004099342301798   0.013885306871824   1.038658684088845 )
    r2=(  0.003810790425104   1.063568379284752   0.103856760603673   1.457851751022681 )
    r3=( -0.018778611057636  -0.105166716593295   1.110060949545320  -4.748000808621081 )
elif [ "$conv" == "other" ]; then
    r1=(  1.068600181822688  -0.003959206893801   0.008259711038958   1.078155539089231 )
    r2=(  0.006402499024408   1.057406970250561   0.085662812571837   1.168243532406646 )
    r3=( -0.012811475186137  -0.088631899555967   1.107921357723761  -4.178049420864948 )
fi

format="%."$scale"f"
xmni=$(echo $xtal $ytal $ztal ${r1[0]} ${r1[1]} ${r1[2]} ${r1[3]} | awk '{printf "'$format'", $1*$4 + $2*$5 + $3*$6 + $7}')
ymni=$(echo $xtal $ytal $ztal ${r2[0]} ${r2[1]} ${r2[2]} ${r2[3]} | awk '{printf "'$format'", $1*$4 + $2*$5 + $3*$6 + $7}')
zmni=$(echo $xtal $ytal $ztal ${r3[0]} ${r3[1]} ${r3[2]} ${r3[3]} | awk '{printf "'$format'", $1*$4 + $2*$5 + $3*$6 + $7}')

echo "$xmni $ymni $zmni"

exit 0
